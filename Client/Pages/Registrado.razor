@page "/registrado-page"
@inject NavigationManager NavigationManager
@inject HttpClient httpClient
@using DoaseApp.Shared.Classes;
@using Microsoft.AspNetCore.Components.Web
@using static Microsoft.AspNetCore.WebUtilities.QueryHelpers

<link rel="stylesheet" href="/css/stylesheet.css" />

@if (sucBuscarUsuario == true)
{
    <div class="d-flex justify-content-center align-items-center flex-column">
        <h3>Olá, @User.FirstName!</h3>

        <div class="d-flex flex-wrap justify-content-center mt-4">
            <div class="card col-md-6 col-lg-4 mx-2 mb-3">
                <button type="button" class="btn btn-primary btn-block btn-lg px-4 py-3" @onclick="@NavigateToCriarCampanha" disabled="@(User.TemCampanha ? true : false)">
                    <strong>Criar Campanha</strong>
                </button>
            </div>

            <div class="card col-md-6 col-lg-4 mx-2 mb-3">
                <button type="button" class="btn btn-primary btn-block btn-lg px-4 py-3" @onclick="@NavigateToCriarAdministarCampanha" disabled="@(User.TemCampanha ? false : true)">
                    <strong>Administrar Campanha</strong>
                </button>
            </div>
        </div>


        <p></p>
        <p></p>
        <p></p>
        <p></p>

        <button @onclick="NavigateToLoginPage" class="btn btn-secondary btn-lg">Voltar para página de Login</button>
    </div>

}


@code {
    [Parameter] public string Email { get; set; }
    [Parameter] public string Password { get; set; }
    public Person User { get; set; } = new Person(); // Initialize User object
    private string username;

    public bool sucBuscarUsuario = false;



    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);
        var queryParameters = System.Web.HttpUtility.ParseQueryString(uri.Query);
        Email = queryParameters["email"];
        Password = queryParameters["password"];

        await GetUserByEmail(Email);

    }

    private void NavigateToLoginPage()
    {
        NavigationManager.NavigateTo("/");
    }

    private void NavigateToCriarCampanha()
    {
        username = User.Email;
        NavigationManager.NavigateTo($"/criar-campanha?email={username}");
    }

    private void NavigateToCriarAdministarCampanha()
    {
        username = User.Email;
        NavigationManager.NavigateTo($"/administrar-campanha?email={username}");
    }

    private async Task GetUserByEmail(string email)
    {
        User = await httpClient.GetFromJsonAsync<Person>($"api/person/byEmail?email={email}");

        if (User != null)
            sucBuscarUsuario = true;
    }
}

