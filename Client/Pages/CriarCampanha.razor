@page "/criar-campanha"
@inject NavigationManager NavigationManager
@inject HttpClient httpClient
@inject IItemRepository ItemRepository
@using DoaseApp.Shared.Classes;
@using Microsoft.AspNetCore.Components.Web
@using static Microsoft.AspNetCore.WebUtilities.QueryHelpers

<h3>Criar Campanha</h3>

<div class="mb-3">
    <label for="formGroupExampleInput" class="form-label">Criador: </label>
    <input type="text" class="form-control" id="criador" placeholder="Criador...">
</div>
<div class="mb-3">
    <label for="formGroupExampleInput2" class="form-label">Nome da Campanha: </label>
    <input type="text" class="form-control" id="nomeCampanha" placeholder="De um nome para a campanha..">
</div>
<div class="mb-3">
    <label for="formGroupExampleInput2" class="form-label">Descricao: </label>
    <textarea class="form-control" id="formGroupExampleInput2" placeholder="Descreva a quem e como essa campanha beneficiara..."></textarea>
</div>

<h4>Selecione quais os itens e quantidades arrecadados pela campanha: </h4>


<div class="row justify-content-center">
    <div class="col-3">
        <InputSelect class="form-control" @bind-Value="selectedName">
            <option value="">Select a name</option>
            @foreach (var item in Itens)
            {
                    <option value="@item.NomeItem">@item.NomeItem</option>
            }
        </InputSelect>
    </div>
    <div class="col-3">
        <input type="text" class="form-control" placeholder="Last name" aria-label="Last name">
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-3">
        <input type="text" class="form-control" placeholder="First name" aria-label="First name">
    </div>
    <div class="col-3">
        <input type="text" class="form-control" placeholder="Last name" aria-label="Last name">
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-3">
        <input type="text" class="form-control" placeholder="First name" aria-label="First name">
    </div>
    <div class="col-3">
        <input type="text" class="form-control" placeholder="Last name" aria-label="Last name">
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-3">
        <input type="text" class="form-control" placeholder="First name" aria-label="First name">
    </div>
    <div class="col-3">
        <input type="text" class="form-control" placeholder="Last name" aria-label="Last name">
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-3">
        <input type="text" class="form-control" placeholder="First name" aria-label="First name">
    </div>
    <div class="col-3">
        <input type="text" class="form-control" placeholder="Last name" aria-label="Last name">
    </div>
</div>




<button type="button" class="btn btn-primary">Primary</button>


@code {

    [Parameter] public string Email { get; set; }
    public Person User { get; set; }

    private string selectedName;

    public List<Item> Itens { get; set; } = new List<Item>();

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);
        var queryParameters = System.Web.HttpUtility.ParseQueryString(uri.Query);
        Email = queryParameters["email"];

        await GetUserByEmail(Email);
        await GetAllItens();

    }

    private async Task GetUserByEmail(string email)
    {
        User = await httpClient.GetFromJsonAsync<Person>($"api/person/byEmail?email={email}");
    }

    private async Task GetAllItens()
    {
        var items = await httpClient.GetFromJsonAsync<IEnumerable<Item>>("api/item/all");

        Itens = items?.ToList();
    }
}
