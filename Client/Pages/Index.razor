@page "/"
@using DoaseApp.Shared.Classes;
@inject NavigationManager NavigationManager
@inject IPersonRepository PersonRepository
@inject HttpClient httpClient

<div style="text-align: center;">
  <img src="images/doase.png" alt="Logo">
</div>

<h1>Login</h1>

@if (errorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

@if (!loginSuccessfull && intermediateLoginBox == false)
{
    <div class="form-group">
        <label for="username">Username:</label>
        <input type="text" class="form-control" id="username" @bind-value="username">
    </div>

    <div class="form-group">
        <label for="password">Senha:</label>
        <input type="password" class="form-control" id="password" @bind-value="password">
    </div>

    <button type="submit" class="btn btn-primary" style="margin-top: 10px;" @onclick="Login">Login</button>

    <p style="margin-top: 10px;">Ainda não registrado? <a href="/cadastro" @onclick="Register">Clique aqui</a></p>
}

@if (loginSuccessfull == true && intermediateLoginBox == true)
{
    <div class="d-flex justify-content-center">
        <div class="card bg-light p-5">
            <div class="card-body d-flex flex-column align-items-center">
                <p>Login realizado com sucesso!</p>
                <div class="d-flex justify-content-center mb-8">
                    <button type="button" class="btn btn-primary mx-2" @onclick="@NavigateToRegistered">Continuar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private string username;
    private string password;
    private string errorMessage;
    private IEnumerable<Person> persons;
    public bool loginSuccessfull = false;
    public bool intermediateLoginBox = false;

    private async Task Login()
    {
        if (string.IsNullOrEmpty(username) || string.IsNullOrEmpty(password))
        {
            errorMessage = "Por favor informe um Usuário ou Senha";
        }
        else
        {
            await GetAll();

            if (persons.Any(a => a.Email.Equals(username)))
            {
                Person verifyPerson = new Person();

                foreach (Person person in persons)
                {
                    if (person.Email == username)
                    {
                        if (person.Senha != password)
                        {
                            errorMessage = "Usuário ou Senha inválido";
                        }
                        else
                        {
                            loginSuccessfull = true;
                            intermediateLoginBox = true;
                        }
                    }
                }
            }

            else
            {
                errorMessage = "Senha ou Username inválido";
            }

            // Perform login logic here
            // You can use authentication libraries such as Microsoft.AspNetCore.Authentication
        }
    }

    private void Register()
    {
        NavigationManager.NavigateTo("/cadastro");
    }

    private void NavigateToRegistered()
    {
        NavigationManager.NavigateTo($"/registrado-page?email={username}&password={password}");
    }

    private async Task GetAll()
    {
        persons = await httpClient.GetFromJsonAsync<IEnumerable<Person>>("api/person/all");
    }

}