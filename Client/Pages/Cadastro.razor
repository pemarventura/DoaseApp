
@page "/cadastro"
@using DoaseApp.Shared;
@using DoaseApp.Shared.Enums;
@using System.ComponentModel;
@using DoaseApp.Shared.Classes;
@inject HttpClient httpClient
@inject IPersonRepository PersonRepository
@inject NavigationManager NavigationManager

<h1 style="text-align:center;">Cadastro de Usuário</h1>

@if (!showForm1 && !showForm2 && !showForm3 && !isSubmitted)
{
    <div class="d-flex justify-content-center">
        <div class="card bg-light p-5" >
            <div class="card-body">
                <div class="d-flex justify-content-center">
                    <form class="form-inline">
                        <div class="d-flex flex-column">
                        <div class="form-check form-check-inline mr-4">
                            <input class="form-check-input" type="radio" name="option" id="option1" value="1" @onclick="() => selectedOption = '1'">
                            <label class="form-check-label" for="option1">Pessoa Jurídica</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="option" id="option2" value="2" @onclick="() => selectedOption = '2'">
                            <label class="form-check-label" for="option2">Pessoa Física</label>
                        </div>
                        <div class="mt-4 text-center">
                            <button type="submit" class="btn btn-info btn-lg w-100 text-light" @onclick="@ShowForm" style="margin-top: 10px;">Submit</button>
                        </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@if (showForm1)
{
    <EditForm Model="@person" OnSubmit="@SubmitFormJuridica">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row justify-content-center">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="name">Empresa:</label>
                    <InputText id="name" class="form-control" @bind-Value="@person.FirstName"  />
                    <ValidationMessage For="@(() => person.FirstName)" />
                </div>

                <div class="form-group">
                    <label for="cpf">CNPJ:</label>
                    <InputText id="cpf" class="form-control" @bind-Value="@person.CNPJ"  />
                    <ValidationMessage For="@(() => person.CPF)" />
                </div>

                <div class="form-group">
                    <label for="phone-number">Telefone:</label>
                    <InputText id="phone-number" class="form-control" @bind-Value="@person.PhoneNumber"  />
                    <ValidationMessage For="@(() => person.PhoneNumber)" />
                </div>

                <div class="form-group">
                    <label for="area">Área de Empreendimento:</label>
                    <InputSelect id="area" class="form-control" @bind-Value="@person.AreaEmpreendimento" >
                        @foreach (AreasEmpreendimento area in Enum.GetValues(typeof(AreasEmpreendimento)))
                        {
                            string description = GetEnumDescription(area);
                            <option value="@area">@description</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => person.AreaEmpreendimento)" />
                </div>
            </div>

            <div class="col-md-4">

                <div class="form-group">
                    <label for="address">Cidade:</label>
                    <InputText id="address" class="form-control" @bind-Value="@person.City"  />
                    <ValidationMessage For="@(() => person.City)" />
                </div>

                <div class="form-group">
                    <label for="address">Bairro:</label>
                    <InputText id="address" class="form-control" @bind-Value="@person.Neighborhood"  />
                    <ValidationMessage For="@(() => person.Neighborhood)" />
                </div>

                <div class="form-group">
                    <label for="address">Endereço:</label>
                    <InputText id="address" class="form-control" @bind-Value="@person.Address"  />
                    <ValidationMessage For="@(() => person.Address)" />
                </div>

                <div class="form-group">
                    <label for="address">CEP:</label>
                    <InputText id="address" class="form-control" @bind-Value="@person.CEP"  />
                    <ValidationMessage For="@(() => person.CEP)" />
                </div>

            </div>
        </div>

        <div class="text-center">
            <button type="submit" class="btn btn-primary" style="margin-top: 10px;">Salvar</button>
        </div>
    </EditForm>
}

@if (showForm2)
{
    <EditForm Model="@person" OnSubmit="@SubmitFormFisica">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row justify-content-center">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="name">Nome:</label>
                    <InputText id="name" class="form-control" @bind-Value="@person.FirstName"  />
                    <ValidationMessage For="@(() => person.FirstName)" />
                </div>

                <div class="form-group">
                    <label for="last-name">Sobrenome:</label>
                    <InputText id="last-name" class="form-control" @bind-Value="@person.LastName"  />
                    <ValidationMessage For="@(() => person.LastName)" />
                </div>

                <div class="form-group">
                <label for="cpf">CPF:</label>
                <InputText id="cpf" class="form-control" @bind-Value="@person.CPF" />
                <ValidationMessage For="@(() => person.CPF)" />
            </div>

                <div class="form-group">
                    <label for="date-of-birth">Data de nascimento:</label>
                    <InputDate id="date-of-birth" class="form-control" @bind-Value="@person.DateOfBirth"  />
                    <ValidationMessage For="@(() => person.DateOfBirth)" />
                </div>

                <div class="form-group">
                    <label for="phone-number">Telefone:</label>
                    <InputText id="phone-number" class="form-control" @bind-Value="@person.PhoneNumber"  />
                    <ValidationMessage For="@(() => person.PhoneNumber)" />
                </div>
            </div>

            <div class="col-md-4">

                <div class="form-group">
                    <label for="state">Estado:</label>
                    <InputSelect id="state" class="form-control" @bind-Value="@person.State" >
                        @foreach (var state in Enum.GetValues(typeof(BrazilianState)))
                        {
                            <option value="@state">@state</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => person.State)" />
                </div>

                <div class="form-group">
                    <label for="address">Cidade:</label>
                    <InputText id="address" class="form-control" @bind-Value="@person.City"  />
                    <ValidationMessage For="@(() => person.City)" />
                </div>

                <div class="form-group">
                    <label for="address">Bairro:</label>
                    <InputText id="address" class="form-control" @bind-Value="@person.Neighborhood"  />
                    <ValidationMessage For="@(() => person.Neighborhood)" />
                </div>

                <div class="form-group">
                    <label for="address">Endereço:</label>
                    <InputText id="address" class="form-control" @bind-Value="@person.Address"  />
                    <ValidationMessage For="@(() => person.Address)" />
                </div>

                <div class="form-group">
                    <label for="address">CEP:</label>
                    <InputText id="address" class="form-control" @bind-Value="@person.CEP"  />
                    <ValidationMessage For="@(() => person.CEP)" />
                </div>

            </div>
        </div>

        <div class="text-center">
            <button type="submit" class="btn btn-primary" style="margin-top: 10px;">Salvar</button>
        </div>
    </EditForm>
}

@if (showForm3)
{
    <EditForm Model="@person" OnValidSubmit="@SaveUserData">
        <div class="d-flex justify-content-center mt-4">
            <div class="card bg-light p-5">
                <div class="card-body">
                    <div class="text-center">
                        <p>
                            <strong class="font-italic">Informe seu email e sua senha,</strong>
                            <strong class="font-weight-bold">estes devem ser usados para acessar o sistema.</strong>
                        </p>
                    </div>
                    <div class="form-group">
                        <label for="email">Email:</label>
                        <input id="email" class="form-control form-control-sm" @bind="@person.Email">
                    </div>
                    <div class="form-group">
                        <label for="senha">Senha:</label>
                        <input id="senha" class="form-control form-control-sm" type="password" @bind="@person.Senha">
                    </div>
                    <div class="text-center mt-3">
                        <button type="submit" class="btn btn-primary btn-margin">Finalizar</button>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>

}

@if (isSubmitted && showForm3 == false)
{
    <div class="d-flex justify-content-center">
        <div class="card bg-light p-5">
            <div class="card-body d-flex flex-column align-items-center">
                <p>Seus dados foram salvos com sucesso!</p>
                <div class="d-flex justify-content-center mb-8">
                    <button type="button" class="btn btn-primary mx-2" @onclick="@ResetForm">Voltar</button>
                    <button type="button" class="btn btn-primary mx-2" @onclick="@NavigateToIndex">Continuar</button>
                </div>
            </div>
        </div>
    </div>
}


@if (persons != null && persons.Any())
{
    <h2>Nomes Cadastrados:</h2>
    <ul>
        @foreach (var person in persons)
        {
            <li>@($"{person.Email} - {person.Senha}")</li>
        }
    </ul>
}

<button type="button" class="btn btn-secondary" @onclick="@GetAll" style="margin-top: 10px;">Mostrar Nomes</button>

@code {
    private Person person = new Person();
    public bool isSubmitted = false;
    public bool isSaved = false;
    private IEnumerable<Person> persons;

    char selectedOption = ' '; // Variable to store the selected option
    bool showForm1 = false; // Flag to show/hide form 1
    bool showForm2 = false; // Flag to show/hide form 2
    bool showForm3 = false; // Flag to show/hide form 3

    private async Task SaveUserData()
    {
        showForm3 = false;
        isSubmitted = true;
        await httpClient.PostAsJsonAsync("api/person", person);

    }

    private async Task GetAll()
    {
        persons = await httpClient.GetFromJsonAsync <IEnumerable<Person>> ("api/person/all");
    }

    private void ShowForm()
    {
        if (selectedOption == '1')
        {
            showForm1 = true;
            showForm2 = false;
        }
        else if (selectedOption == '2')
        {
            showForm1 = false;
            showForm2 = true;
        }
    }

    private void ShowForm2()
    {
        showForm3 = true;
    }

    private void ResetForm()
    {
        isSubmitted = false;
        showForm1 = false;
        showForm2 = false;
        showForm3 = false;
    }

    static string GetEnumDescription(Enum value)
    {
        var fieldInfo = value.GetType().GetField(value.ToString());
        var attributes = (DescriptionAttribute[])fieldInfo.GetCustomAttributes(typeof(DescriptionAttribute), false);

        return attributes.Length > 0 ? attributes[0].Description : value.ToString();
    }

    private void SubmitFormJuridica()
    {
        // Add any desired logic here to process the form data
        // ...

        showForm1 = false;
        showForm2 = false;
        showForm3 = true;

    }

    private void SubmitFormFisica()
    {
        // Add any desired logic here to process the form data
        // ...

        showForm1 = false;
        showForm2 = false;
        showForm3 = true;
        person.CriaCampanha = true;

    }
    
    private void NavigateToIndex()
    {
        NavigationManager.NavigateTo("/");
    }


}